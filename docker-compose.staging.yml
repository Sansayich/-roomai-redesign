version: '3.8'

services:
  postgres-staging:
    image: postgres:15-alpine
    container_name: roomai-postgres-staging
    environment:
      POSTGRES_USER: roomgpt
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: roomgpt_staging
    volumes:
      - postgres_data_staging:/var/lib/postgresql/data
    networks:
      - roomai-network-staging
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U roomgpt"]
      interval: 5s
      timeout: 5s
      retries: 5

  roomai-staging:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: roomai-app-staging
    ports:
      - "3001:3000"
    environment:
      DATABASE_URL: postgresql://roomgpt:${DATABASE_PASSWORD}@postgres-staging:5432/roomgpt_staging?schema=public
      NEXTAUTH_URL: ${NEXTAUTH_URL:-https://staging.room-gpt.ru}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      EMAIL_SERVER: ${EMAIL_SERVER}
      EMAIL_FROM: ${EMAIL_FROM}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      REPLICATE_API_TOKEN: ${REPLICATE_API_TOKEN}
      NEXT_PUBLIC_IS_STAGING: "true"
      NODE_ENV: production
    env_file:
      - .env.staging
    depends_on:
      postgres-staging:
        condition: service_healthy
    networks:
      - roomai-network-staging
    restart: unless-stopped

volumes:
  postgres_data_staging:
    driver: local

networks:
  roomai-network-staging:
    driver: bridge

